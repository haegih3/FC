{"version":3,"sources":["getType.js","main.js"],"names":["getType","data","Object","prototype","toString","call","slice","sum","x","y","a","b","console","log","sem","arguments"],"mappings":";;ACAA;;;;AAGA;ADHe,ACIf,SDJwBA,OAAT,CAAiBC,IAAjB,EAAuB;AAClC,ACIJ,SDJWC,MAAM,CAACC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BJ,IAA/B,EAAqCK,KAArC,CAA2C,CAA3C,EAA8C,CAAC,CAA/C,CAAP;AACH,ACID;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA,SAASC,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AAAE;AACjB,SAAOD,CAAC,GAAGC,CAAX;AACH;;AAED,IAAMC,CAAC,GAAGH,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAb;AACA,IAAMI,CAAC,GAAGJ,GAAG,CAAC,CAAD,EAAI,EAAJ,CAAb,EAAsB;;AAEtBK,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACAE,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,OAAO,CAACC,GAAR,CAAYH,CAAC,GAAGC,CAAhB;;AAEA,SAASG,GAAT,GAAe;AACXF,EAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ;AACA;AACH;;AAEDH,OAAO,CAACC,GAAR,CAAYC,GAAG,CAAC,CAAD,EAAI,CAAJ,CAAf","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["export default function getType(data) {\r\n    return Object.prototype.toString.call(data).slice(8, -1);\r\n}","import getType from './getType';\r\n\r\n\r\n/*\r\n// 산술 연산자 arithmetic operator\r\nconsole.log(1 + 2);\r\nconsole.log(5 - 7);\r\nconsole.log(3 * 4);\r\nconsole.log(12 / 2);\r\nconsole.log(18 % 5);\r\n\r\n\r\n// 할당 연산자 assignment operator\r\nlet a = 2;\r\n\r\n//a = a + 1;\r\na += 1\r\n\r\nconsole.log(a);\r\n\r\n\r\n// 비교 연산자 comparison operator\r\n// function isEqual(x, y) {\r\n//     return x === y;\r\n// }\r\n// console.log(isEqual(1, 1));\r\n// console.log(isEqual(2, '2'));\r\n\r\nconst a = 7;\r\nconst b = 7;\r\n\r\nconsole.log(a === b);\r\nconsole.log(a !== b); // 불일치 연산자\r\nconsole.log(a < b);\r\nconsole.log(a >= b);\r\n\r\n\r\n// 논리 연산자 logical operator\r\nconst a = 1 === 1;\r\nconst b = 'AB' === 'Ab';\r\nconst c = true;\r\n\r\nconsole.log(a);\r\nconsole.log(b);\r\nconsole.log(c);\r\n\r\nconsole.log('\\\"&&\\\" : ', a && b && c);\r\nconsole.log('\\\"||\\\" : ', a || b || c);\r\nconsole.log('\\\"!\\\" : ', !a);\r\n\r\n\r\n// 삼항 연산자 ternaty operator\r\n\r\nconst a = 1 < 2; // true\r\n\r\nif (a) {\r\n    console.log('참');\r\n} else {\r\n    console.log('거짓');\r\n}\r\n\r\nconsole.log(a ? '참' : '거짓');\r\n\r\n\r\nimport random from './getRandom';\r\n\r\n// 조건문\r\nconst a = random();\r\n\r\nswitch (a) {\r\n    case 0:\r\n        console.log('a is 0');\r\n        break\r\n    case 1:\r\n        console.log('a is 1');\r\n        break\r\n    case 3:\r\n        console.log('a is 3');\r\n        break\r\n    default:\r\n        console.log('rest...');\r\n}\r\n\r\nif (a === 0) {\r\n    console.log('a is 0');\r\n} else if (a === 2) {\r\n    console.log('a is 2');\r\n} else if (a === 4) {\r\n    console.log('a is 4');\r\n} else {\r\n    console.log('rest...');\r\n}\r\n\r\n\r\n// 반복문\r\nconst ulEl = document.querySelector('ul');\r\n\r\nfor (let i = 0; i < 10; i++) {\r\n    const liEL = document.createElement('li');\r\n    liEL.textContent = `list-${i + 1}`;\r\n    if (i % 2 === 0) {\r\n        liEL.addEventListener('click', function () {\r\n            console.log(liEL.textContent)\r\n        });\r\n    }\r\n    ulEl.appendChild(liEL);\r\n}\r\n\r\n\r\n// 변수 유효범위 Variable Scope\r\n// var 함수범위 -> 권장하지 않음\r\n// let, const 블럭(중괄호) 범위\r\n\r\nfunction scope() {\r\n    if (true) {\r\n        const a = 123;\r\n        console.log(a);\r\n    }\r\n}\r\nscope()\r\n\r\n\r\n// 형 변환 Type conversion\r\n// == -> 값을 비교하므로 의도하지 않게 true값이 나올 수 있음\r\nconst a = 1;\r\nconst b = '1';\r\nconsole.log(a == b);\r\n\r\n// Truthy(참 같은 값)\r\n// true, {}, [], 1, 2, 'false', -12, '3.14'...\r\n\r\n// Falsy(거짓 같은 값)\r\n// false, '', null, undefined, 1, -1, NaN\r\nif ('false') {\r\n    console.log(123);\r\n}\r\n*/\r\n\r\n\r\n// 함수 복습\r\nfunction sum(x, y) { // 함수 선언에 선언된 함수에 사용되는 변수 = 매개변수\r\n    return x + y;\r\n}\r\n\r\nconst a = sum(1, 3);\r\nconst b = sum(4, 12); // 함수에 들어가는 특정 값 = 인수\r\n\r\nconsole.log(a);\r\nconsole.log(b);\r\nconsole.log(a + b);\r\n\r\nfunction sem() {\r\n    console.log(arguments);\r\n    return\r\n}\r\n\r\nconsole.log(sem(7, 3));"]}